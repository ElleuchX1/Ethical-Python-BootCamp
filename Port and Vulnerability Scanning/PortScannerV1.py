# Advanced Port Scanner 
from socket import *
import optparse
from threading import *
def cScan(host,port):
    try:
        sock=socket(AF_INET,SOCK_STREAM)
        sock.connect((host,port))
        print('/+/ {}/TCP is OPENED'.format(port))
    except:
        print('/-/ {}/TCP is CLOSED'.format(port))
    finally:
        sock.close()
def PortScanner(host,ports):
    try:
        ipFromDNS=gethostbyname(host)
    except:
        print('Failed to resolve {}'.format(host))
    try:
        NameFromIP= gethostbyaddr(ipFromDNS)
        print('/+/ Results For: {}'.format(NameFromIP[0]))     
    except:
        print('/+/ Results for: {}'.format(ipFromDNS))
    setdefaulttimeout(1)

    for port in ports :
        thr=Thread(target=cScan, args=(host,int(port)))
        thr.start()
def main():
    parse1= optparse.OptionParser('How to use: '+ '-H <host> -p <Ports>')
    parse1.add_option('-H',dest='Host',type='string',help='Target Host')
    parse1.add_option('-p',dest='Ports',type='string',help='Target Ports sep = comma ')
    (options,args)= parse1.parse_args()
    Host=options.Host
    Ports=str(options.Ports).split(',')
    if (Host == None) or (Ports[0]==None ):
        print(parse1.usage)
        exit(0)
    else:
        PortScanner(Host,Ports)
        
if __name__ == "__main__":
    main()











